// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.0
// 	protoc        v5.26.1
// source: encounter/encounter-service.proto

package encounter

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EncounterStatus int32

const (
	EncounterStatus_ACTIVE   EncounterStatus = 0
	EncounterStatus_DRAFT    EncounterStatus = 1
	EncounterStatus_ARCHIVED EncounterStatus = 2
)

// Enum value maps for EncounterStatus.
var (
	EncounterStatus_name = map[int32]string{
		0: "ACTIVE",
		1: "DRAFT",
		2: "ARCHIVED",
	}
	EncounterStatus_value = map[string]int32{
		"ACTIVE":   0,
		"DRAFT":    1,
		"ARCHIVED": 2,
	}
)

func (x EncounterStatus) Enum() *EncounterStatus {
	p := new(EncounterStatus)
	*p = x
	return p
}

func (x EncounterStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncounterStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_encounter_encounter_service_proto_enumTypes[0].Descriptor()
}

func (EncounterStatus) Type() protoreflect.EnumType {
	return &file_encounter_encounter_service_proto_enumTypes[0]
}

func (x EncounterStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EncounterStatus.Descriptor instead.
func (EncounterStatus) EnumDescriptor() ([]byte, []int) {
	return file_encounter_encounter_service_proto_rawDescGZIP(), []int{0}
}

type EncounterType int32

const (
	EncounterType_SOCIAL   EncounterType = 0
	EncounterType_LOCATION EncounterType = 1
	EncounterType_MISC     EncounterType = 2
)

// Enum value maps for EncounterType.
var (
	EncounterType_name = map[int32]string{
		0: "SOCIAL",
		1: "LOCATION",
		2: "MISC",
	}
	EncounterType_value = map[string]int32{
		"SOCIAL":   0,
		"LOCATION": 1,
		"MISC":     2,
	}
)

func (x EncounterType) Enum() *EncounterType {
	p := new(EncounterType)
	*p = x
	return p
}

func (x EncounterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncounterType) Descriptor() protoreflect.EnumDescriptor {
	return file_encounter_encounter_service_proto_enumTypes[1].Descriptor()
}

func (EncounterType) Type() protoreflect.EnumType {
	return &file_encounter_encounter_service_proto_enumTypes[1]
}

func (x EncounterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EncounterType.Descriptor instead.
func (EncounterType) EnumDescriptor() ([]byte, []int) {
	return file_encounter_encounter_service_proto_rawDescGZIP(), []int{1}
}

type EncounterApprovalStatus int32

const (
	EncounterApprovalStatus_PENDING         EncounterApprovalStatus = 0
	EncounterApprovalStatus_SYSTEM_APPROVED EncounterApprovalStatus = 1
	EncounterApprovalStatus_ADMIN_APPROVED  EncounterApprovalStatus = 2
	EncounterApprovalStatus_DECLINED        EncounterApprovalStatus = 3
)

// Enum value maps for EncounterApprovalStatus.
var (
	EncounterApprovalStatus_name = map[int32]string{
		0: "PENDING",
		1: "SYSTEM_APPROVED",
		2: "ADMIN_APPROVED",
		3: "DECLINED",
	}
	EncounterApprovalStatus_value = map[string]int32{
		"PENDING":         0,
		"SYSTEM_APPROVED": 1,
		"ADMIN_APPROVED":  2,
		"DECLINED":        3,
	}
)

func (x EncounterApprovalStatus) Enum() *EncounterApprovalStatus {
	p := new(EncounterApprovalStatus)
	*p = x
	return p
}

func (x EncounterApprovalStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncounterApprovalStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_encounter_encounter_service_proto_enumTypes[2].Descriptor()
}

func (EncounterApprovalStatus) Type() protoreflect.EnumType {
	return &file_encounter_encounter_service_proto_enumTypes[2]
}

func (x EncounterApprovalStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EncounterApprovalStatus.Descriptor instead.
func (EncounterApprovalStatus) EnumDescriptor() ([]byte, []int) {
	return file_encounter_encounter_service_proto_rawDescGZIP(), []int{2}
}

type EmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_encounter_encounter_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_encounter_encounter_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_encounter_encounter_service_proto_rawDescGZIP(), []int{0}
}

type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_encounter_encounter_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_encounter_encounter_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_encounter_encounter_service_proto_rawDescGZIP(), []int{1}
}

type EncountersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Encounters []*Encounter `protobuf:"bytes,1,rep,name=Encounters,proto3" json:"Encounters,omitempty"`
}

func (x *EncountersResponse) Reset() {
	*x = EncountersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_encounter_encounter_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncountersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncountersResponse) ProtoMessage() {}

func (x *EncountersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_encounter_encounter_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncountersResponse.ProtoReflect.Descriptor instead.
func (*EncountersResponse) Descriptor() ([]byte, []int) {
	return file_encounter_encounter_service_proto_rawDescGZIP(), []int{2}
}

func (x *EncountersResponse) GetEncounters() []*Encounter {
	if x != nil {
		return x.Encounters
	}
	return nil
}

type IdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *IdRequest) Reset() {
	*x = IdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_encounter_encounter_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdRequest) ProtoMessage() {}

func (x *IdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_encounter_encounter_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdRequest.ProtoReflect.Descriptor instead.
func (*IdRequest) Descriptor() ([]byte, []int) {
	return file_encounter_encounter_service_proto_rawDescGZIP(), []int{3}
}

func (x *IdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *UserIdRequest) Reset() {
	*x = UserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_encounter_encounter_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIdRequest) ProtoMessage() {}

func (x *UserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_encounter_encounter_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIdRequest.ProtoReflect.Descriptor instead.
func (*UserIdRequest) Descriptor() ([]byte, []int) {
	return file_encounter_encounter_service_proto_rawDescGZIP(), []int{4}
}

func (x *UserIdRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type StatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status EncounterStatus `protobuf:"varint,1,opt,name=Status,proto3,enum=encounter.EncounterStatus" json:"Status,omitempty"`
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_encounter_encounter_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_encounter_encounter_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_encounter_encounter_service_proto_rawDescGZIP(), []int{5}
}

func (x *StatusRequest) GetStatus() EncounterStatus {
	if x != nil {
		return x.Status
	}
	return EncounterStatus_ACTIVE
}

type Encounter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64                   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UserId         int64                   `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Name           string                  `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description    string                  `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Latitude       float32                 `protobuf:"fixed32,5,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	Longitude      float32                 `protobuf:"fixed32,6,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
	Xp             int64                   `protobuf:"varint,7,opt,name=Xp,proto3" json:"Xp,omitempty"`
	Status         EncounterStatus         `protobuf:"varint,8,opt,name=Status,proto3,enum=encounter.EncounterStatus" json:"Status,omitempty"`
	Type           EncounterType           `protobuf:"varint,9,opt,name=Type,proto3,enum=encounter.EncounterType" json:"Type,omitempty"`
	Range          float32                 `protobuf:"fixed32,10,opt,name=Range,proto3" json:"Range,omitempty"`
	Image          string                  `protobuf:"bytes,11,opt,name=Image,proto3" json:"Image,omitempty"`
	ImageLatitude  float32                 `protobuf:"fixed32,12,opt,name=ImageLatitude,proto3" json:"ImageLatitude,omitempty"`
	ImageLongitude float32                 `protobuf:"fixed32,13,opt,name=ImageLongitude,proto3" json:"ImageLongitude,omitempty"`
	PeopleCount    int64                   `protobuf:"varint,14,opt,name=PeopleCount,proto3" json:"PeopleCount,omitempty"`
	ApprovalStatus EncounterApprovalStatus `protobuf:"varint,15,opt,name=ApprovalStatus,proto3,enum=encounter.EncounterApprovalStatus" json:"ApprovalStatus,omitempty"`
}

func (x *Encounter) Reset() {
	*x = Encounter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_encounter_encounter_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Encounter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Encounter) ProtoMessage() {}

func (x *Encounter) ProtoReflect() protoreflect.Message {
	mi := &file_encounter_encounter_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Encounter.ProtoReflect.Descriptor instead.
func (*Encounter) Descriptor() ([]byte, []int) {
	return file_encounter_encounter_service_proto_rawDescGZIP(), []int{6}
}

func (x *Encounter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Encounter) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Encounter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Encounter) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Encounter) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Encounter) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Encounter) GetXp() int64 {
	if x != nil {
		return x.Xp
	}
	return 0
}

func (x *Encounter) GetStatus() EncounterStatus {
	if x != nil {
		return x.Status
	}
	return EncounterStatus_ACTIVE
}

func (x *Encounter) GetType() EncounterType {
	if x != nil {
		return x.Type
	}
	return EncounterType_SOCIAL
}

func (x *Encounter) GetRange() float32 {
	if x != nil {
		return x.Range
	}
	return 0
}

func (x *Encounter) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Encounter) GetImageLatitude() float32 {
	if x != nil {
		return x.ImageLatitude
	}
	return 0
}

func (x *Encounter) GetImageLongitude() float32 {
	if x != nil {
		return x.ImageLongitude
	}
	return 0
}

func (x *Encounter) GetPeopleCount() int64 {
	if x != nil {
		return x.PeopleCount
	}
	return 0
}

func (x *Encounter) GetApprovalStatus() EncounterApprovalStatus {
	if x != nil {
		return x.ApprovalStatus
	}
	return EncounterApprovalStatus_PENDING
}

var File_encounter_encounter_service_proto protoreflect.FileDescriptor

var file_encounter_encounter_service_proto_rawDesc = []byte{
	0x0a, 0x21, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x65, 0x6e, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x0e,
	0x0a, 0x0c, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0f,
	0x0a, 0x0d, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x4a, 0x0a, 0x12, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6e, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52,
	0x0a, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x22, 0x1b, 0x0a, 0x09, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x43, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x45,
	0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xfd, 0x03, 0x0a, 0x09, 0x45, 0x6e, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x58, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x58, 0x70, 0x12, 0x32, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x65,
	0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x65, 0x6f, 0x70,
	0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x50,
	0x65, 0x6f, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x0e, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x45,
	0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x36, 0x0a, 0x0f, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x33,
	0x0a, 0x0d, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4c,
	0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x49, 0x53,
	0x43, 0x10, 0x02, 0x2a, 0x5d, 0x0a, 0x17, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53,
	0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x45, 0x43, 0x4c, 0x49, 0x4e, 0x45, 0x44,
	0x10, 0x03, 0x32, 0x9b, 0x06, 0x0a, 0x10, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x46, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x65,
	0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x12, 0x18, 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x42, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3f, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x12, 0x14, 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x45,
	0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x1a, 0x14, 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x00,
	0x12, 0x3f, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x1a, 0x14, 0x2e, 0x65, 0x6e, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x22,
	0x00, 0x12, 0x3b, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x14, 0x2e, 0x65,
	0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x1a, 0x18, 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b,
	0x0a, 0x07, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x14, 0x2e, 0x65, 0x6e, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x1a,
	0x18, 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x14,
	0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x1e, 0x5a, 0x1c, 0x45, 0x4e, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x2d, 0x4d, 0x53,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_encounter_encounter_service_proto_rawDescOnce sync.Once
	file_encounter_encounter_service_proto_rawDescData = file_encounter_encounter_service_proto_rawDesc
)

func file_encounter_encounter_service_proto_rawDescGZIP() []byte {
	file_encounter_encounter_service_proto_rawDescOnce.Do(func() {
		file_encounter_encounter_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_encounter_encounter_service_proto_rawDescData)
	})
	return file_encounter_encounter_service_proto_rawDescData
}

var file_encounter_encounter_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_encounter_encounter_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_encounter_encounter_service_proto_goTypes = []interface{}{
	(EncounterStatus)(0),         // 0: encounter.EncounterStatus
	(EncounterType)(0),           // 1: encounter.EncounterType
	(EncounterApprovalStatus)(0), // 2: encounter.EncounterApprovalStatus
	(*EmptyRequest)(nil),         // 3: encounter.EmptyRequest
	(*EmptyResponse)(nil),        // 4: encounter.EmptyResponse
	(*EncountersResponse)(nil),   // 5: encounter.EncountersResponse
	(*IdRequest)(nil),            // 6: encounter.IdRequest
	(*UserIdRequest)(nil),        // 7: encounter.UserIdRequest
	(*StatusRequest)(nil),        // 8: encounter.StatusRequest
	(*Encounter)(nil),            // 9: encounter.Encounter
}
var file_encounter_encounter_service_proto_depIdxs = []int32{
	9,  // 0: encounter.EncountersResponse.Encounters:type_name -> encounter.Encounter
	0,  // 1: encounter.StatusRequest.Status:type_name -> encounter.EncounterStatus
	0,  // 2: encounter.Encounter.Status:type_name -> encounter.EncounterStatus
	1,  // 3: encounter.Encounter.Type:type_name -> encounter.EncounterType
	2,  // 4: encounter.Encounter.ApprovalStatus:type_name -> encounter.EncounterApprovalStatus
	3,  // 5: encounter.EncounterService.GetApproved:input_type -> encounter.EmptyRequest
	3,  // 6: encounter.EncounterService.GetTouristCreated:input_type -> encounter.EmptyRequest
	7,  // 7: encounter.EncounterService.GetByUser:input_type -> encounter.UserIdRequest
	8,  // 8: encounter.EncounterService.GetApprovedByStatus:input_type -> encounter.StatusRequest
	7,  // 9: encounter.EncounterService.GetNearby:input_type -> encounter.UserIdRequest
	7,  // 10: encounter.EncounterService.GetNearbyByType:input_type -> encounter.UserIdRequest
	9,  // 11: encounter.EncounterService.CreateEncounter:input_type -> encounter.Encounter
	9,  // 12: encounter.EncounterService.UpdateEncounter:input_type -> encounter.Encounter
	9,  // 13: encounter.EncounterService.Approve:input_type -> encounter.Encounter
	9,  // 14: encounter.EncounterService.Decline:input_type -> encounter.Encounter
	6,  // 15: encounter.EncounterService.DeleteEncounter:input_type -> encounter.IdRequest
	5,  // 16: encounter.EncounterService.GetApproved:output_type -> encounter.EncountersResponse
	5,  // 17: encounter.EncounterService.GetTouristCreated:output_type -> encounter.EncountersResponse
	5,  // 18: encounter.EncounterService.GetByUser:output_type -> encounter.EncountersResponse
	5,  // 19: encounter.EncounterService.GetApprovedByStatus:output_type -> encounter.EncountersResponse
	5,  // 20: encounter.EncounterService.GetNearby:output_type -> encounter.EncountersResponse
	5,  // 21: encounter.EncounterService.GetNearbyByType:output_type -> encounter.EncountersResponse
	9,  // 22: encounter.EncounterService.CreateEncounter:output_type -> encounter.Encounter
	9,  // 23: encounter.EncounterService.UpdateEncounter:output_type -> encounter.Encounter
	4,  // 24: encounter.EncounterService.Approve:output_type -> encounter.EmptyResponse
	4,  // 25: encounter.EncounterService.Decline:output_type -> encounter.EmptyResponse
	4,  // 26: encounter.EncounterService.DeleteEncounter:output_type -> encounter.EmptyResponse
	16, // [16:27] is the sub-list for method output_type
	5,  // [5:16] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_encounter_encounter_service_proto_init() }
func file_encounter_encounter_service_proto_init() {
	if File_encounter_encounter_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_encounter_encounter_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_encounter_encounter_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_encounter_encounter_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncountersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_encounter_encounter_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_encounter_encounter_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_encounter_encounter_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_encounter_encounter_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Encounter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_encounter_encounter_service_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_encounter_encounter_service_proto_goTypes,
		DependencyIndexes: file_encounter_encounter_service_proto_depIdxs,
		EnumInfos:         file_encounter_encounter_service_proto_enumTypes,
		MessageInfos:      file_encounter_encounter_service_proto_msgTypes,
	}.Build()
	File_encounter_encounter_service_proto = out.File
	file_encounter_encounter_service_proto_rawDesc = nil
	file_encounter_encounter_service_proto_goTypes = nil
	file_encounter_encounter_service_proto_depIdxs = nil
}
