version: "3.9"

x-logging: &fluent-bit
  driver: fluentd
  options:
    fluentd-address: 172.23.0.6:24224

services:
  nats:
    image: nats:latest
    container_name: nats
    restart: on-failure
    networks:
      - database
      - monitoring
    ports:
      - "4222:4222"

  db:
    image: postgres:latest
    container_name: db
    restart: always
    networks:
      - database
      - monitoring
    ports:
      - "5432:5432"
    volumes:
      - ./db_init.sh:/docker-entrypoint-initdb.d/db_init.sh
      - ./ENCOUNTERS-MS/encounters.sql:/docker-entrypoint-initdb.d/encounters_init.sql
      - ./STAKEHOLDERS_MS/stakeholders.sql:/docker-entrypoint-initdb.d/stakeholders_init.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: super
      POSTGRES_MULTIPLE_DATABASES: encounters,stakeholders
      PGPORT: 5432
      DB_HOST: db
      DB_DATABASE_ENCOUNTERS: encounters
      DB_DATABASE_STAKEHOLDERS: stakeholders
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 40s

  api-gateway:
    build:
      context: ./api-gateway/
      dockerfile: Dockerfile
    container_name: api-gateway
    hostname: api-gateway
    restart: always
    environment:
      GATEWAY_ADDRESS: ":44333"
    depends_on:
      - encounter
      - stakeholder
      - nats
      - db
    networks:
      - database
      - monitoring
    ports:
      - "44333:44333"
    expose:
      - "8000"

  encounter:
    build:
      context: ./ENCOUNTERS-MS
      dockerfile: Dockerfile
    container_name: encounter
    restart: on-failure
    ports:
      - "8092:8092"
    networks:
      - database
      - monitoring
    environment:
      DB_USER_E: postgres
      DB_PASSWORD_E: super
      DB_PORT_E: 5432
      DB_DATABASE_E: encounters
      DB_HOST_E: db
      NATS_HOST: nats
      NATS_PORT: 4222
      FINISH_ENCOUNTER_COMMAND_SUBJECT: encounter.finish.command
      FINISH_ENCOUNTER_REPLY_SUBJECT: encounter.finish.reply
    logging: *fluent-bit
    depends_on:
      db:
        condition: service_healthy
      nats:
        condition: service_started
    volumes:
      - ./db_init.sh:/docker-entrypoint-initdb.d/db_init.sh

  stakeholder:
    build:
      context: ./STAKEHOLDERS_MS
      dockerfile: Dockerfile
    container_name: stakeholder
    restart: on-failure
    ports:
      - "8099:8099"
    networks:
      - database
      - monitoring
    environment:
      DB_USER_S: postgres
      DB_PASSWORD_S: super
      DB_PORT_S: 5432
      DB_DATABASE_S: stakeholders
      DB_HOST_S: db
      NATS_HOST: nats
      NATS_PORT: 4222
      FINISH_ENCOUNTER_COMMAND_SUBJECT: encounter.finish.command
      FINISH_ENCOUNTER_REPLY_SUBJECT: encounter.finish.reply
    logging: *fluent-bit
    depends_on:
      db:
        condition: service_healthy
      nats:
        condition: service_started
    volumes:
      - ./db_init.sh:/docker-entrypoint-initdb.d/db_init.sh

networks:
  database:
    driver: bridge
  monitoring:
    external: true 
